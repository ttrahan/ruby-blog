jobs:

# runCI job that builds and pushes artifact
  - name: ruby-blog_runCI
    type: runCI
    steps:
      - OUT: rubyblog-img-vm
    flags:
      - rubyBlog
  
# Generate manifest
  - name: rubyblog-manifest-vm
    type: manifest
    steps:
      - IN: rubyblog-img-vm
      - IN: rubyblog-img-options-vm-test
      - TASK: managed
    flags:
      - rubyBlog

# Deploy to TEST environment
  - name: rubyblog-deploy-vm-test
    type: runSh
    steps:
      - IN: rubyblog-manifest-vm
      - IN: ecr-config
      - IN: rubyblog-ssh
      - IN: rubyblog-params-vm-test
      - TASK: 
        - script: declare -a VMS && export VMS
        - script: VMS=(34.234.225.35)
        - script: "export DOCKER_LOGIN=$(aws ecr get-login)"
        - script: export IMAGE_URL=$(shipctl get_json_value $RUBYBLOGMANIFESTVM_PATH/manifest.json images[0].image)
        - script: export IMAGE_TAG=$(shipctl get_json_value $RUBYBLOGMANIFESTVM_PATH/manifest.json images[0].tag)
        - script: export PORT_MAP=$(shipctl get_json_value $RUBYBLOGMANIFESTVM_PATH/manifest.json images[0].portMappings)
        - script: echo $IMAGE_URL:$IMAGE_URL
        - script: echo $PORT_MAP
        - script: |
            for n in $VMS; do
              ssh -i $RUBYBLOGSSH_KEYPATH ec2-user@${n} bash -c "'
                $DOCKER_LOGIN
                docker ps
                docker stop rubyapp || true && docker rm rubyapp || true
                docker run -d --name "rubyapp" -p 0:3000 679404489841.dkr.ecr.us-east-1.amazonaws.com/ruby-demo:master.21
                docker ps
              '"
            done
    flags:
      - rubyBlog
